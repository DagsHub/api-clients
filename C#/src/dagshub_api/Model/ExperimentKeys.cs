/* 
 * DagsHub API
 *
 * This API provides a way to retrive & interact with data about DagsHub repositories, users, issues, webhooks and more. The API is also used by the [DagsHub Direct Data Access streaming client](https://github.com/DagsHub/client) to stream content from a repository for easier and faster training. 
 *
 * OpenAPI spec version: 1.0.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = dagshub_api.Client.SwaggerDateConverter;

namespace dagshub_api.Model
{
    /// <summary>
    /// ExperimentKeys
    /// </summary>
    [DataContract]
        public partial class ExperimentKeys :  IEquatable<ExperimentKeys>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExperimentKeys" /> class.
        /// </summary>
        /// <param name="experimentKeys">experimentKeys (required).</param>
        public ExperimentKeys(List<string> experimentKeys = default(List<string>))
        {
            // to ensure "experimentKeys" is required (not null)
            if (experimentKeys == null)
            {
                throw new InvalidDataException("experimentKeys is a required property for ExperimentKeys and cannot be null");
            }
            else
            {
                this._ExperimentKeys = experimentKeys;
            }
        }
        
        /// <summary>
        /// Gets or Sets _ExperimentKeys
        /// </summary>
        [DataMember(Name="experiment_keys", EmitDefaultValue=false)]
        public List<string> _ExperimentKeys { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ExperimentKeys {\n");
            sb.Append("  _ExperimentKeys: ").Append(_ExperimentKeys).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ExperimentKeys);
        }

        /// <summary>
        /// Returns true if ExperimentKeys instances are equal
        /// </summary>
        /// <param name="input">Instance of ExperimentKeys to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ExperimentKeys input)
        {
            if (input == null)
                return false;

            return 
                (
                    this._ExperimentKeys == input._ExperimentKeys ||
                    this._ExperimentKeys != null &&
                    input._ExperimentKeys != null &&
                    this._ExperimentKeys.SequenceEqual(input._ExperimentKeys)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this._ExperimentKeys != null)
                    hashCode = hashCode * 59 + this._ExperimentKeys.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
