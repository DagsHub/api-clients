/* 
 * DagsHub API
 *
 * This API provides a way to retrive & interact with data about DagsHub repositories, users, issues, webhooks and more. The API is also used by the [DagsHub Direct Data Access streaming client](https://github.com/DagsHub/client) to stream content from a repository for easier and faster training. 
 *
 * OpenAPI spec version: 1.0.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using dagshub_api.Client;
using dagshub_api.Api;
using dagshub_api.Model;

namespace dagshub_api.Test
{
    /// <summary>
    ///  Class for testing StorageIntegrationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class StorageIntegrationsApiTests
    {
        private StorageIntegrationsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new StorageIntegrationsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of StorageIntegrationsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' StorageIntegrationsApi
            //Assert.IsInstanceOfType(typeof(StorageIntegrationsApi), instance, "instance is a StorageIntegrationsApi");
        }

        /// <summary>
        /// Test GetBucketContent
        /// </summary>
        [Test]
        public void GetBucketContentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string owner = null;
            //string repo = null;
            //string protocol = null;
            //string bucket = null;
            //string path = null;
            //bool? includeSize = null;
            //int? limit = null;
            //string fromToken = null;
            //var response = instance.GetBucketContent(owner, repo, protocol, bucket, path, includeSize, limit, fromToken);
            //Assert.IsInstanceOf<Files1> (response, "response is Files1");
        }
        /// <summary>
        /// Test GetBucketFile
        /// </summary>
        [Test]
        public void GetBucketFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string owner = null;
            //string repo = null;
            //string protocol = null;
            //string bucket = null;
            //string path = null;
            //instance.GetBucketFile(owner, repo, protocol, bucket, path);
            
        }
        /// <summary>
        /// Test GetBuckets
        /// </summary>
        [Test]
        public void GetBucketsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string owner = null;
            //string repo = null;
            //var response = instance.GetBuckets(owner, repo);
            //Assert.IsInstanceOf<Integration> (response, "response is Integration");
        }
    }

}
