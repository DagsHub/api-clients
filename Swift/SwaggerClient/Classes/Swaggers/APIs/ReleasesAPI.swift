//
// ReleasesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class ReleasesAPI {
    /**
     List Releases

     - parameter owner: (path) owner of the repository 
     - parameter repo: (path) name of the repository 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listReleases(owner: String, repo: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        listReleasesWithRequestBuilder(owner: owner, repo: repo).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     List Releases
     - GET /repos/{owner}/{repo}/releases
     - 

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey token (QUERY)
       - name: tokenAuth
     - parameter owner: (path) owner of the repository 
     - parameter repo: (path) name of the repository 

     - returns: RequestBuilder<Void> 
     */
    open class func listReleasesWithRequestBuilder(owner: String, repo: String) -> RequestBuilder<Void> {
        var path = "/repos/{owner}/{repo}/releases"
        let ownerPreEscape = "\(owner)"
        let ownerPostEscape = ownerPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{owner}", with: ownerPostEscape, options: .literal, range: nil)
        let repoPreEscape = "\(repo)"
        let repoPostEscape = repoPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{repo}", with: repoPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
