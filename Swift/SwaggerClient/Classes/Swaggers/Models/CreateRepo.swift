//
// CreateRepo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct CreateRepo: Codable {

    public enum ProjectTemplate: String, Codable { 
        case cookiecutterDagshubDvc = "cookiecutter-dagshub-dvc"
        case custom = "custom"
        case _none = "none"
        case notebookTemplate = "notebook-template"
    }
    public enum License: String, Codable { 
        case apacheLicense20 = "Apache License 2.0"
        case mitLicense = "MIT License"
        case abstylesLicense = "Abstyles License"
        case academicFreeLicenseV11 = "Academic Free License v1.1"
        case academicFreeLicenseV12 = "Academic Free License v1.2"
        case academicFreeLicenseV20 = "Academic Free License v2.0"
        case academicFreeLicenseV21 = "Academic Free License v2.1"
        case academicFreeLicenseV30 = "Academic Free License v3.0"
        case afferoGeneralPublicLicenseV10 = "Affero General Public License v1.0"
        case apacheLicense10 = "Apache License 1.0"
        case apacheLicense11 = "Apache License 1.1"
        case artisticLicense10 = "Artistic License 1.0"
        case artisticLicense20 = "Artistic License 2.0"
        case bsd2ClauseLicense = "BSD 2-clause License"
        case bsd3ClauseLicense = "BSD 3-clause License"
        case bsd4ClauseLicense = "BSD 4-clause License"
        case creativeCommonsCc010Universal = "Creative Commons CC0 1.0 Universal"
        case eclipsePublicLicense10 = "Eclipse Public License 1.0"
        case educationalCommunityLicenseV10 = "Educational Community License v1.0"
        case educationalCommunityLicenseV20 = "Educational Community License v2.0"
        case gnuAfferoGeneralPublicLicenseV30 = "GNU Affero General Public License v3.0"
        case gnuFreeDocumentationLicenseV11 = "GNU Free Documentation License v1.1"
        case gnuFreeDocumentationLicenseV12 = "GNU Free Documentation License v1.2"
        case gnuFreeDocumentationLicenseV13 = "GNU Free Documentation License v1.3"
        case gnuGeneralPublicLicenseV10 = "GNU General Public License v1.0"
        case gnuGeneralPublicLicenseV20 = "GNU General Public License v2.0"
        case gnuGeneralPublicLicenseV30 = "GNU General Public License v3.0"
        case gnuLesserGeneralPublicLicenseV21 = "GNU Lesser General Public License v2.1"
        case gnuLesserGeneralPublicLicenseV30 = "GNU Lesser General Public License v3.0"
        case gnuLibraryGeneralPublicLicenseV20 = "GNU Library General Public License v2.0"
        case iscLicense = "ISC license"
        case mozillaPublicLicense10 = "Mozilla Public License 1.0"
        case mozillaPublicLicense11 = "Mozilla Public License 1.1"
        case mozillaPublicLicense203 = "Mozilla Public License 2.03"
    }
    /** name of the repository */
    public var name: String
    /** A short description of the repository */
    public var _description: String?
    /** Either true to create a private repository, or false to create a public one. */
    public var _private: Bool?
    /** Pass true to create an initial commit with README, .gitignore and LICENSE. */
    public var autoInit: Bool?
    /** Choose &#x27;custom&#x27; to set .gitignore, license and readme, or &#x27;none&#x27; for a completely empty repository. For other templates you may specify only the license.  */
    public var projectTemplate: ProjectTemplate?
    /** Desired language .gitignore templates to apply. Use the name of the templates. */
    public var gitignores: String?
    /** Desired LICENSE template to apply. Use the name of the template. */
    public var license: License?
    /** Desired README template to apply. Use the name of the template. */
    public var readme: String?

    public init(name: String, _description: String? = nil, _private: Bool? = nil, autoInit: Bool? = nil, projectTemplate: ProjectTemplate? = nil, gitignores: String? = nil, license: License? = nil, readme: String? = nil) {
        self.name = name
        self._description = _description
        self._private = _private
        self.autoInit = autoInit
        self.projectTemplate = projectTemplate
        self.gitignores = gitignores
        self.license = license
        self.readme = readme
    }

    public enum CodingKeys: String, CodingKey { 
        case name
        case _description = "description"
        case _private = "private"
        case autoInit = "auto_init"
        case projectTemplate = "project_template"
        case gitignores
        case license
        case readme
    }

}
