/*
 * DagsHub API
 * This API provides a way to retrive & interact with data about DagsHub repositories, users, issues, webhooks and more. The API is also used by the [DagsHub Direct Data Access streaming client](https://github.com/DagsHub/client) to stream content from a repository for easier and faster training. 
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.EditExperimentPost;
import io.swagger.client.model.ExperimentKeys;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ExperimentsApi
 */
@Ignore
public class ExperimentsApiTest {

    private final ExperimentsApi api = new ExperimentsApi();

    /**
     * Add label to experiment
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addExperimentLabelTest() throws Exception {
        String owner = null;
        String repo = null;
        String experimentKey = null;
        String experimentLabel = null;
        api.addExperimentLabel(owner, repo, experimentKey, experimentLabel);

        // TODO: test validations
    }
    /**
     * Delete experiment label
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteExperimentLabelTest() throws Exception {
        String owner = null;
        String repo = null;
        String experimentKey = null;
        String experimentLabel = null;
        api.deleteExperimentLabel(owner, repo, experimentKey, experimentLabel);

        // TODO: test validations
    }
    /**
     * Edit experiment info
     *
     * Edit experiment info, currently supports just changing experiment name.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editExperimentTest() throws Exception {
        String owner = null;
        String repo = null;
        String experimentKey = null;
        EditExperimentPost body = null;
        api.editExperiment(owner, repo, experimentKey, body);

        // TODO: test validations
    }
    /**
     * Get experiment metrics for experiment
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getExperimentMetricsTest() throws Exception {
        String owner = null;
        String repo = null;
        ExperimentKeys body = null;
        api.getExperimentMetrics(owner, repo, body);

        // TODO: test validations
    }
    /**
     * List Experiments
     *
     * Get a list of experiments in the given repository
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getExperimentsTest() throws Exception {
        String owner = null;
        String repo = null;
        api.getExperiments(owner, repo);

        // TODO: test validations
    }
}
