/*
 * DagsHub API
 * This API provides a way to retrive & interact with data about DagsHub repositories, users, issues, webhooks and more. The API is also used by the [DagsHub Direct Data Access streaming client](https://github.com/DagsHub/client) to stream content from a repository for easier and faster training. 
 *
 * OpenAPI spec version: 1.0.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";

/**
* Commits service.
* @module api/CommitsApi
* @version 1.0.2
*/
export class CommitsApi {

    /**
    * Constructs a new CommitsApi. 
    * @alias module:api/CommitsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getCommit operation.
     * @callback moduleapi/CommitsApi~getCommitCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a single commit
     * @param {String} owner owner of the repository
     * @param {String} repo name of the repository
     * @param {String} sha a SHA1 of a commit
     * @param {module:api/CommitsApi~getCommitCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getCommit(owner, repo, sha, callback) {
      
      let postBody = null;
      // verify the required parameter 'owner' is set
      if (owner === undefined || owner === null) {
        throw new Error("Missing the required parameter 'owner' when calling getCommit");
      }
      // verify the required parameter 'repo' is set
      if (repo === undefined || repo === null) {
        throw new Error("Missing the required parameter 'repo' when calling getCommit");
      }
      // verify the required parameter 'sha' is set
      if (sha === undefined || sha === null) {
        throw new Error("Missing the required parameter 'sha' when calling getCommit");
      }

      let pathParams = {
        'owner': owner,'repo': repo,'sha': sha
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['basicAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/repos/{owner}/{repo}/commits/{sha}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}